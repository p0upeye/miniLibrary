package miniLibrary;

import java.util.ArrayList;
import java.util.List;

public class Library {
    private static int totalBooksAdded = 0;
    private static int totalUsersAdded = 0;
    private final List<Book> books;
    private final List<User> users;

    public Library() {
        this.books = new ArrayList<>();
        this.users = new ArrayList<>();
    }

    public List<Book> getBooks() {
        return books;
    }
    public List<User> getUsers() {
        return users;
    }

    public static int getTotalBooksAdded() {
        return totalBooksAdded;
    }
    public static int getTotalUsersAdded() {
        return totalUsersAdded;
    }

    public void addBook(Book book) {
        getBooks().add(book);
        totalBooksAdded++;
        System.out.printf("–ö–Ω–∏–≥—É %s –±—É–ª–æ –¥–æ–¥–∞–Ω–æ –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏!\n", book);
    }

    public void addUser(User user) {
        getUsers().add(user);
        totalUsersAdded++;
        System.out.printf("%s –¥–æ–¥–∞–Ω–∏–π/–Ω–∞ –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏!\n", user);
    }

    public Book findBookByTitle(String title) {
        for(Book book : getBooks()) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                return book;
            }
        }
        return null;
    }

    public void displayAllBooks() {
        System.out.println("üìö –°–ü–ò–°–û–ö –ö–ù–ò–ì –£ –ë–Ü–ë–õ–Ü–û–¢–ï–¶–Ü");

        if(getBooks().isEmpty()) {
            System.out.println("‚óã –£ –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ –Ω–µ–º–∞—î –∫–Ω–∏–≥!");
        }
        else {

            for(int i = 0; i < getBooks().size(); i++) {
                System.out.printf("%d. %s\n", (i + 1), getBooks().get(i).toString());
            }
        }
        System.out.println("–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ–¥–∞–Ω–∏—Ö –∫–Ω–∏–≥: " + getTotalBooksAdded());
    }

    public void displayAllUsers() {
        System.out.println("üë• –°–ü–ò–°–û–ö –ö–û–†–ò–°–¢–£–í–ê–ß–Ü–í –ë–Ü–ë–õ–Ü–û–¢–ï–ö–ò");

        if(getUsers().isEmpty()) {
            System.out.println("‚óã –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –Ω–µ –∫–æ—Ä–∏—Å—Ç—É—î—Ç—å—Å—è –ø–æ–ø—É–ª—è—Ä–Ω—ñ—Å—Ç—é —Å–µ—Ä–µ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤!");
        }
        else {

            for(int i = 0; i < getUsers().size(); i++) {
                System.out.printf("%d. %s\n", (i + 1), getUsers().get(i).toString());
            }
        }
        System.out.println("–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ–¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: " + getTotalUsersAdded());
    }

    public void displayAllUserActions(Librarian librarian) {
        List<String> actions = librarian.getActions();

        System.out.printf("ü´≥ –°–ü–ò–°–û–ö –î–Ü–ô –ö–û–†–ò–°–¢–£–í–ê–ß–Ü–í (–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞—Ä: %s)\n", librarian.getName());

        if(getUsers().isEmpty()) {
            System.out.println("‚óã –ñ–æ–¥–Ω–∏—Ö –¥—ñ–π –Ω–µ –∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ!");
        }
        else {
            for(int i = 0; i < actions.size(); i++) {
                System.out.printf("%d. %s\n", (i + 1), actions.get(i));
            }
        }
    }
}
